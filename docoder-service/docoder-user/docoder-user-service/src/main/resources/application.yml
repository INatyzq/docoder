server:
  port: 9002
  servlet:
    context-path: /docoder

spring:
  application:
    name: @artifactId@
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://47.106.119.6:3306/docoder_user?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&allowMultiQueries=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    max-active: 20
    initial-size: 1
    min-idle: 3
    max-wait: 60000
    time-between-eviction-runs-millis: 60000
    min-evictable-idle-time-millis: 300000
    validation-query: SELECT 'x' FROM DUAL
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #filters: stat,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true
  cloud:
    nacos:
      discovery:
        enabled: true
        server-addr: 47.106.119.6:8848
        register-enabled: true
  redis:
    database: 0
    host: 47.106.119.6
    port: 7480
    password: 123456

mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  global-config:
    db-config:
      id-type: auto
      table-underline: true
      logic-not-delete-value: 1
      logic-delete-value: 0
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

dubbo:
  scan:
    base-packages: cn.yangzq.docoder.user.api
  protocol:
    name: dubbo
    port: -1
  registry:
    address: spring-cloud://localhost
  #application:
    #qos-enable: true
  cloud:
    subscribed-services: docoder-base-service
  consumer:
    check: false


sa-token:
  # token名称 (同时也是cookie名称)
  token-name: dctoken
  # token前缀
  token-prefix: 'Bear '
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 604800
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: tik
  # 是否输出操作日志
  is-log: false

